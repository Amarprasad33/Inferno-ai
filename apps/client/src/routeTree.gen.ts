/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as SigninIndexRouteImport } from './routes/signin/index'
import { Route as ChatIndexRouteImport } from './routes/chat/index'
import { Route as ExpInfiniRouteImport } from './routes/exp/infini'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninIndexRoute = SigninIndexRouteImport.update({
  id: '/signin/',
  path: '/signin/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExpInfiniRoute = ExpInfiniRouteImport.update({
  id: '/exp/infini',
  path: '/exp/infini',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/exp/infini': typeof ExpInfiniRoute
  '/chat': typeof ChatIndexRoute
  '/signin': typeof SigninIndexRoute
  '/signup': typeof SignupIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/exp/infini': typeof ExpInfiniRoute
  '/chat': typeof ChatIndexRoute
  '/signin': typeof SigninIndexRoute
  '/signup': typeof SignupIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/exp/infini': typeof ExpInfiniRoute
  '/chat/': typeof ChatIndexRoute
  '/signin/': typeof SigninIndexRoute
  '/signup/': typeof SignupIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/exp/infini' | '/chat' | '/signin' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/exp/infini' | '/chat' | '/signin' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/exp/infini'
    | '/chat/'
    | '/signin/'
    | '/signup/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ExpInfiniRoute: typeof ExpInfiniRoute
  ChatIndexRoute: typeof ChatIndexRoute
  SigninIndexRoute: typeof SigninIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin/': {
      id: '/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/exp/infini': {
      id: '/exp/infini'
      path: '/exp/infini'
      fullPath: '/exp/infini'
      preLoaderRoute: typeof ExpInfiniRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ExpInfiniRoute: ExpInfiniRoute,
  ChatIndexRoute: ChatIndexRoute,
  SigninIndexRoute: SigninIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
